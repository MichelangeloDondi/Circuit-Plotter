# ==============================================================================
# ==============================================================================
# ============================== Module: Saving ================================
# ==============================================================================
# ==============================================================================

"""
    Module: Saving

Dedicated to saving plots generated by the Circuit Plotter Program.
This module simplifies the saving process by providing a single function to call.

# Author: Michelangelo Dondi

# Date: 29-10-2023

# Version: 4.7

# License: MIT License

# Required packages:
    - 'Plots' for saving plots
    - 'FilePathsBase' to normalize filepaths

# Included modules:
    - Module 'DataStructure' provides the data structures used by the Circuit Plotter Program.
    - Module 'Plotting' provides functions for drawing the current circuit plot.

#Exported functions:
    - `save_plot_displayed(circuit)`: Saves the plot into a "circuit_drawings" directory. 
        If no plot is rendered, the plot is first drawn and then saved. The user is prompted 
        to provide a filename for the plot. If no filename is provided, a default filename 
        "circuit_plot.png" is used. If the provided filename does not have an extension, 
        ".png" is appended to the filename. The plot is saved in the "Images" directory. 
        If the "circuit_drawings" directory does not exist, it is created.

# When are the exported functions invoked?
    - Function `save_plot_displayed(circuit)` is invoked by the function 'show_final_greetings_asking_whether_to_save_plot_displayed(circuit)' 
        in module 'Helping' and used by the function 'main(circuit, edge_info)' defined in module 'MainFunction'.
    - Function `save_plot_displayed(circuit)` is called by the function `_handle_special_input(input::String, circuit, edge_info)::Symbol` 
        in module 'HandlingSpecialInputs'.

# Notes:
    - The plot is saved in the "circuit_drawings" directory. If the directory does not exist, 
        it is created and then the plot is saved in it.
    - If no plot is rendered, the plot is first drawn and then saved.
    - The user is prompted to provide a filename for the plot.
    - If no filename is provided, a default filename "circuit_plot.png" is used.
    - The ".png" is appended to the filename.
"""
module Saving

    # ==============================================================================
    # =========================== Exported Function ================================
    # ==============================================================================
        
        # Invoke this function to export the save_plot_displayed function
        export save_plot_displayed

    # ==============================================================================
    # ============================= Required Packages ==============================
    # ==============================================================================

        # For saving plots
        using Plots

        # For saving plots
        using FilePathsBase

    # ==============================================================================
    # ============================== Included Modules ==============================
    # ==============================================================================  

        # Module 'DataStructure' provides the data structures used by the Circuit Plotter Program.
        include("../data_structure.jl")
        using .DataStructure: Circuit # Access the data structures

        # Module 'Plotting' provides functions for drawing the current circuit plot.
        include("plotting.jl")
        using .Plotting: draw_plot # Draw the current circuit plot

    # ==============================================================================
    # =================== Function: save_plot_displayed(circuit) ===================
    # ==============================================================================

        """
        save_plot_displayed(circuit)

        Saves the current plot into a "circuit_drawings" directory. If no plot is 
        rendered, the plot is first drawn and then saved. The user is prompted to 
        provide a filename for the plot. If no filename is provided, a default 
        filename "circuit_plot.png" is used. The extension ".png" is appended to
        the filename. If the "circuit_drawings" directory does not exist, it is
        created and the plot is saved in it.

        Parameters:
        - circuit: The circuit to draw and save.
        - io: The input/output stream to use for prompting the user for a filename.

        Returns:
        - nothing
            
        Notes:
        - The plot is saved in the "circuit_drawings" directory. If the "Images" directory does not exist, it is created.
        - If no plot is rendered, the plot is first drawn and then saved.
        - The user is prompted to provide a filename for the plot. 
        - If no filename is provided, a default filename "circuit_plot.png" is used. 
        - If the provided filename does not have an extension, ".png" is appended to the filename.
        """
        function save_plot_displayed(circuit, io::IO=stdin)

            # Ensure that the plot is rendered
            _ensure_plot_exists(circuit)

            # Determine paths
            project_directory = joinpath(@__DIR__, "../..")   # Project root directory

            # Ensure that the "circuit_drawings" directory exists and create it if it does not
            drawings_directory = _ensure_drawings_directory(project_directory)
            
            # Generate filename
            filename = _generate_filename(io)

            # Generate filepath
            filepath = joinpath(drawings_directory, filename)
            
            # Normalize the filepath to make it more user-friendly
            normalized_filepath = normpath(filepath)

            # Try to save the plot
            try

                # Save the plot in the "circuit_drawings" directory as a .png file
                Plots.savefig(normalized_filepath)
                println("\033[32mCircuit plot successfully saved as '$normalized_filepath'.\033[0m")

            # If an error occurs, provide feedback to the user
            catch e
                println("\033[31mError saving the file: $e\033[0m")
            end
        end

    # ==============================================================================
    # ==================== Function: _ensure_plot_exists(circuit) ==================
    # ==============================================================================

        """
            _ensure_plot_exists(circuit)

        Ensures that a plot exists for the specified circuit. If no plot exists, 
        a plot is drawn.

        Parameters:
        - circuit: The circuit to draw and save.

        Returns:
        - nothing

        Notes:
        - If no plot is rendered, the plot is first drawn and then saved.
        """
        function _ensure_plot_exists(circuit)

            # Ensure that the plot is rendered
            try

                # Attempt to get the current plot
                plot = Plots.current()

            # If no plot is rendered, draw the plot
            catch

                # Provide feedback to user
                println("\n\033[33mNo plot is currently rendered.")
                println("\n\033[36mDrawing the plot now.\033[0m")

                # Draw the plot
                draw_plot(circuit)
            end
        end

    # ==============================================================================
    # ------- Function: _ensure_drawings_directory(base_dir::String)::String -------
    # ==============================================================================

        """
            _ensure_drawings_directory(base_dir::String)::String

        Ensures that a "circuit_drawings" directory exists within the specified base directory.
        Returns the path to the "circuit_drawings" directory.

        Parameters:
        - base_dir: The base directory to check for the existence of an "circuit_drawings" directory.

        Returns:
        - The path to the "circuit_drawings" directory.
        """
        function _ensure_drawings_directory(base_dir::String)::String
            images_path = joinpath(base_dir, "circuit_drawings")
            if !isdir(images_path)
                mkdir(images_path)
            end
            return images_path
        end    

    # ==============================================================================
    # ------------------- Function: _generate_filename()::String -------------------
    # ==============================================================================

        """
            _generate_filename()::String

        Ask the user for a filename to save the plot as. If no filename is provided, 
        a default filename "circuit_plot.png" is used.    

        Parameters:
        - io: The input/output stream to use for prompting the user for a filename.
            
        Returns:
        - The generated filename.
            
        Notes:
        - The user is prompted to provide a filename for the plot.
        - If no filename is provided, a default filename "circuit_plot.png" is used.
        - The ".png" is appended to the filename.
        """
        function _generate_filename(io::IO=stdin)::String

            # Prompt the user for a filename
            println("""\033[36m
            Enter a filename for the circuit plot. 
            The file will be saved in .png format.
            Press Enter to use the default name (default: circuit_plot.png).\033[0m""")

            # Read the filename
            filename = readline(io)

            # If filename is empty, use the default filename
            if filename == ""
                return "circuit_plot.png"
            end

            # Append ".png" to filename
            filename = filename * ".png"

            # Return the filename
            return filename
        end         
end